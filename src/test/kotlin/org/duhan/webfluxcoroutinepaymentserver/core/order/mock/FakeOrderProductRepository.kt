package org.duhan.webfluxcoroutinepaymentserver.core.order.mock

import org.duhan.webfluxcoroutinepaymentserver.core.order.model.OrderProduct
import org.duhan.webfluxcoroutinepaymentserver.core.order.port.OrderProductRepository

class FakeOrderProductRepository : OrderProductRepository {
    private var autoGeneratedId: Long = 0
    private val data: MutableList<OrderProduct> = mutableListOf()

    override suspend fun save(orderProduct: OrderProduct): OrderProduct {
        if (orderProduct.id == null || orderProduct.id == 0L) {
            val newOrderProduct =
                OrderProduct(
                    id = ++autoGeneratedId,
                    orderId = orderProduct.orderId,
                    productId = orderProduct.productId,
                    price = orderProduct.price,
                    quantity = orderProduct.quantity,
                    createdAt = orderProduct.createdAt,
                    updatedAt = orderProduct.updatedAt,
                )

            data.add(newOrderProduct)
            return newOrderProduct
        } else {
            data.removeIf { it.id == orderProduct.id }
            data.add(orderProduct)
            return orderProduct
        }
    }

    override suspend fun findAll(): List<OrderProduct> = data.toList()
}

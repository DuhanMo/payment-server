package org.duhan.webfluxcoroutinepaymentserver.domain.product

import org.duhan.webfluxcoroutinepaymentserver.domain.product.model.Product
import org.duhan.webfluxcoroutinepaymentserver.domain.product.port.ProductRepository

class FakeProductRepository : ProductRepository {
    private var autoGeneratedId: Long = 0
    private val data: MutableList<Product> = mutableListOf()

    override suspend fun save(product: Product): Product {
        if (product.id == null || product.id == 0L) {
            val newProduct =
                Product(
                    id = ++autoGeneratedId,
                    name = product.name,
                    price = product.price,
                    createdAt = product.createdAt,
                    updatedAt = product.updatedAt,
                )
            data.add(newProduct)
            return newProduct
        } else {
            data.removeIf { it.id == product.id }
            data.add(product)
            return product
        }
    }

    override suspend fun findAllById(productIds: List<Long>): List<Product> = data.filter { it.id in productIds }
}
